{"version":3,"sources":["Style/user.png","components/Header.jsx","Firebase/FirebaseConfig.js","components/EditItems.jsx","components/Products.jsx","components/Items.jsx","components/Register.jsx","Firebase/dataUser.js","components/Login.jsx","components/Home.jsx","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","user","useUser","className","email","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","EditItems","key","data","editUpdate","history","useHistory","useState","categoria","nombre","descripcion","precio","imagen","producto","guardarProducto","useEffect","handleInputChange","e","preventDefault","target","name","value","onSubmit","push","type","placeholder","onChange","Productos","spells","setSpells","currenId","setCurrenId","description","setDescription","category","setCategory","price","setPrice","image","setImage","setName","a","db","firestore","collection","onSnapshot","snapShots","docs","map","doc","id","fetchData","data-toggle","data-target","data-whatever","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","htmlFor","onClick","add","then","spell","set","src","alt","delete","onDelete","Home","Auth","setEmail","password","setPassword","useFirebaseApp","submit","auth","createUserWithEmailAndPassword","expresionemail","expresionname","expresionpassword","img1","aria-describedby","pattern","title","event","alert","length","test","uid","DataUser","Items","login","signInWithEmailAndPassword","expresion","required","to","Login","Routes","exact","path","component","Register","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","firebaseConfig","fallback","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0261e65d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.71566aee.png\";","import React from 'react';\nimport { useUser } from 'reactfire';\nimport '../Style/style.css';\n\nconst Header = () => {\n    const user = useUser();\n\n    return (\n        <header>\n            <nav className=\"text-center mr-3 \">\n                <h2 className=\"text-center\">Hola<br /> {user.email}\n                </h2>\n            </nav>\n        </header>\n    )\n}\n\n\n\n\nexport default Header;","import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBwPx6LLTSiAX6Un5cGSid9-bCVqiCYC9E\",\n  authDomain: \"landing-c2a1a.firebaseapp.com\",\n  databaseURL: \"https://landing-c2a1a.firebaseio.com\",\n  projectId: \"landing-c2a1a\",\n  storageBucket: \"landing-c2a1a.appspot.com\",\n  messagingSenderId: \"793606070830\",\n  appId: \"1:793606070830:web:fc57c85ed4301a12e175bf\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\n","import React, { useState, useEffect } from 'react';\nimport \"../Style/style.css\";\n\nimport { useHistory } from \"react-router-dom\"\n\n\n\nconst EditItems = ({ key, data, editUpdate }) => {\n    const history = useHistory();\n\n    const [producto, guardarProducto] = useState({\n        categoria: '',\n        nombre: '',\n        descripcion: '',\n        precio: '',\n        imagen: ''\n    })\n    //llenar el state automaticamente\n    useEffect(() => {\n        guardarProducto({ ...data });\n    }, [data]);\n\n\n    const handleInputChange = e => {\n        e.preventDefault()\n        guardarProducto({\n            ...producto,\n            [e.target.name]: e.target.value\n        })\n    }\n    const { categoria, nombre, descripcion, precio, imagen } = producto;\n\n\n    const handleFormSubmit = e => {\n        e.preventDefault()\n        editUpdate(producto);\n        history.push(\"/\")\n    }\n\n    return (\n        <div key={key} className=\"row justify-content-center\">\n            <div className=\"col-sm-8\">\n                <div className=\"card-body\">\n                    <h2 className=\"text-center mb-4 font-weight-bold\">\n                        Editar Producto\n                    </h2>\n                    <form onSubmit={handleFormSubmit}>\n                        <div className=\"form-group\">\n                            <label>Categoria</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Categoria\"\n                                name=\"categoria\"\n                                value={categoria}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Nombre Producto</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre Producto\"\n                                name=\"titulo\"\n                                value={nombre}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Descripcion</label>\n                            <input\n                                className=\"form-control\"\n                                placeholder=\"Precio Producto\"\n                                name=\"descripcion\"\n                                value={descripcion}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Precio</label>\n                            <input\n                                className=\"form-control\"\n                                placeholder=\"Precio Producto\"\n                                name=\"precio\"\n                                value={precio}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Url Imagen</label>\n                            <input\n                                className=\"form-control\"\n                                placeholder=\"Url Imagen\"\n                                name=\"imagen\"\n                                value={imagen}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                        >\n                            {\" \"}\n                            Guardar cambios\n                      </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditItems;\n\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../Firebase/FirebaseConfig\";\nimport EditItems from \"./EditItems\";\nimport \"../Style/style.css\";\n\nconst Productos = () => {\n    const [spells, setSpells] = useState([]);\n    const [currenId, setCurrenId] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const db = firebase.firestore();\n            await db.collection(\"productos\")\n                .onSnapshot(\n                    snapShots => {\n                        setSpells(snapShots.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n                    })\n        };\n        fetchData();\n    }, []);\n\n\n\n\n    const onCreate = () => {\n        const db = firebase.firestore();\n        db.collection(\"productos\").add({\n            categoria: category,\n            nombre: name,\n            descripcion: description,\n            precio: price,\n            imagen: image\n        }).then(() => {\n            setCategory('')\n            setDescription('')\n            setPrice('')\n            setImage('')\n            setName('')\n        });\n    };\n\n    const onDelete = (id) => {\n        const db = firebase.firestore()\n        db.collection('productos').doc(id).delete()\n    }\n\n    const edit = (spell) => {\n        const db = firebase.firestore()\n        db.collection('productos').doc(spell.id).set({ ...spell, })\n    }\n\n    const id = (data) => {\n        setCurrenId(data);\n    }\n\n\n    return (\n        <div className=\"justify-content-center\">\n            <div className=\"row  justify-content-center p-5\">\n                <button type=\"button\" className=\"col-sm-6 m-5 btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\" data-whatever=\"@mdo\">Crear Nuevo Producto</button>\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Nuevo Producto</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"recipient-categori\" className=\"col-form-label\">Categoria</label>\n                                        <input type=\"text\" value={category} className=\"form-control\" id=\"recipient-name\" onChange={e => setCategory(e.target.value)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"recipient-name\" className=\"col-form-label\">Nombre</label>\n                                        <input type=\"text\" value={name} className=\"form-control\" id=\"recipient-name\" onChange={e => setName(e.target.value)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"recipient-description\" className=\"col-form-label\">Descripcion</label>\n                                        <input type=\"text\" value={description} className=\"form-control\" id=\"recipient-name\" onChange={e => setDescription(e.target.value)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"recipient-price\" className=\"col-form-label\">Precio</label>\n                                        <input type=\"text\" value={price} className=\"form-control\" id=\"recipient-name\" onChange={e => setPrice(e.target.value)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"recipient-image\" className=\"col-form-label\">Imagen</label>\n                                        <input type=\"text\" value={image} className=\"form-control\" id=\"recipient-name\" onChange={e => setImage(e.target.value)} />\n                                    </div>\n\n                                </form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={onCreate} data-dismiss=\"modal\">Crear</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-sm-12\">\n                <EditItems key={currenId} data={currenId} editUpdate={edit} />\n            </div>\n            <div className=\"p\">\n                {spells.map((spell) => {\n                    return (\n                        <div className=\"row p\">\n                            <div className=\"col-sm-12\">\n                                <div className=\"card m-1\">\n                                    <div className=\"card-body p\">\n                                        <div className=\"row container\">\n                                            <div className=\"col-sm-6 form-group\">\n                                                <img src={spell.imagen} className=\"card-img-top\" alt=\"...\" />\n                                            </div>\n                                            <div className=\"col-sm-6 form-group\">\n                                                <label>Categoria</label>\n                                                <p>{spell.categoria}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-8 form-group\">\n                                                <label>Nombre</label>\n                                                <p>{spell.nombre}</p>\n                                            </div>\n                                            <div className=\"col-sm-4 form-group\">\n                                                <label>Precio</label>\n                                                <p>{spell.precio}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-12 form-group\">\n                                                <label>Nombre</label>\n                                                <p>{spell.descripcion}</p>\n                                            </div>\n                                        </div>\n                                        <div key={spell.id} className=\"\">\n                                            <button className=\"btn text-danger m-1\" onClick={() => { id(spell); }}>\n                                                <i className=\"fas fa-pencil-alt\"></i>\n                                            </button>\n                                            <button className=\"btn text-danger m-1\" onClick={() => { onDelete(spell.id); }}>\n                                                <i className=\"far fa-trash-alt\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div >\n                    );\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Productos;\n\n\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Productos from \"./Products\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Header />\n            <Productos className=\"p\" />\n        </div>\n    );\n};\nexport default Home;\n\n\n","import React, { useState } from \"react\";\nimport 'firebase/auth';\nimport { useFirebaseApp, useUser } from 'reactfire';\nimport Items from \"./Items\";\nimport { DataUser } from \"../Firebase/dataUser\";\nimport img1 from \"../Style/user.png\";\nimport \"../Style/style.css\";\n\nconst Auth = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const firebase = useFirebaseApp();\n    const user = useUser();\n\n    const submit = async () => {\n        await firebase.auth().createUserWithEmailAndPassword(email, password)\n    }\n\n\n    const expresionemail = /\\w+@\\w+\\.+[a-z]/;\n    const expresionname = /[A-Z]+$/i;\n    const expresionpassword = /(?=.*\\d)(?=.*[a-záéíóúüñ]).*[A-ZÁÉÍÓÚÜÑ]/;\n\n    const buttonClick = event => {\n        event.preventDefault();\n        if (email === null || email === '' || password === null || password === '' || name === null || name === '') {\n            alert('Todos los campos son requeridos')\n            return false;\n        }\n        else if (email.length > 100 || !expresionemail.test(email)) {\n            alert('Correo invalido')\n            return false\n        }\n        else if (email.length > 30 || !expresionname.test(name)) {\n            alert('Nombre invalido')\n            return false;\n        }\n        else if (password.length > 30 || !expresionpassword.test(password)) {\n            alert('Debe tener al menos una mayúscula, una minúscula y un dígito')\n            return false;\n        } else {\n            submit();\n            DataUser(name, email, password)\n        }\n    };\n\n    return (\n        <div>\n            {\n                !user &&\n                <div className=\"modal-dialog text-center\">\n                    <div className=\"col-sm-10 main-section\" >\n                        <div className=\"modal-content\">\n                            <div className=\"col-12 user-img\">\n                                <img src={img1} alt=\"user\" />\n                            </div>\n                            <form className=\"col-12\" >\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"name\"\n                                        id=\"nombre\"\n                                        type=\"text\"\n                                        aria-describedby=\"namelHelp\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter your name\"\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"email\"\n                                        type=\"text\"\n                                        id=\"email\"\n                                        aria-describedby=\"emailHelp\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter your email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter your password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        pattern=\"(?=.*\\d)(?=.*[a-záéíóúüñ]).*[A-ZÁÉÍÓÚÜÑ].*\"\n                                        title=\"Debe tener al menos una mayúscula, una minúscula y un dígito\"\n                                    />\n                                </div>\n                                <button type=\"submit\" className=\"btn\" onClick={buttonClick}> Registrarse </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            }\n            {\n                user && <Items />\n            }\n        </div >\n    )\n};\n\nexport default Auth;","import firebase from \"./FirebaseConfig\";\n\nexport const DataUser = (name, email, password, uid) => {\n  firebase\n    .firestore()\n    .collection(\"dataUser\")\n    .add({\n      name,\n      email,\n      password,\n      uid\n    });\n};\n","\nimport React, { useState } from \"react\";\nimport 'firebase/auth';\nimport { useFirebaseApp, useUser } from 'reactfire';\nimport { Link } from 'react-router-dom';\nimport Items from \"./Items\";\nimport img1 from '../Style/user.png';\nimport \"../Style/style.css\";\n\nconst Auth = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const firebase = useFirebaseApp();\n    const user = useUser();\n\n\n    const login = async () => {\n        await firebase.auth().signInWithEmailAndPassword(email, password)\n    }\n\n    const buttonClick = event => {\n        event.preventDefault();\n        if (email === null || email === '' || password === null || password === '') {\n            alert('Todos los campos son requeridos')\n            return false;\n        }\n        else if (email.length > 100 || !expresion.test(email)) {\n            alert('Correo invalido')\n            return false;\n        } else {\n            login()\n        }\n    };\n    const expresion = /\\w+@\\w+\\.+[a-z]/;\n\n    return (\n        <div>\n            {\n                !user &&\n                <div className=\"modal-dialog text-center\">\n                    <div className=\"col-sm-10 main-section\" >\n                        <div className=\"modal-content\">\n                            <div className=\"col-12 user-img\">\n                                <img src={img1} alt=\"user\" />\n                            </div>\n                            <form className=\"col-12\" >\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"email\"\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter your email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        name=\"password\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        placeholder=\"Enter your password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                    />\n\n                                </div>\n                                <button type=\"submit\" className=\"btn\" onClick={buttonClick}><i className=\"fas fa-sign-in-alt\"></i> Login </button>\n                            </form>\n                            <div className=\"Login-forgetRegister\">\n                                <Link className=\"btn font \" to=\"/register\">Registrate</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            }\n            {\n                user &&\n                <div>\n                    <Items />\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default Auth;\n","import React from \"react\";\nimport Login from \"./Login\";\n\nconst Home = () => {\n    return (\n        <div>\n            <Login />\n        </div>\n    );\n};\nexport default Home;","import React from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\n\nconst Routes = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    </HashRouter>\n  );\n};\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./Routes.js\";\nimport \"./Style/style.css\";\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { FirebaseAppProvider } from \"reactfire\";\nimport firebaseConfig from \"./Firebase/FirebaseConfig.js\";\n\n// Browser Router\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n        <Suspense fallback={\"Conectando la app...\"}>\n          <App />\n        </Suspense>\n      </FirebaseAppProvider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}